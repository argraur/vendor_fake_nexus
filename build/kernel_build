#!/bin/bash
# vim: ts=2 sw=2 nocindent expandtab

KERNEL_OUT=${OUT}/obj/KERNEL_OBJ

case "$TARGET_PRODUCT" in
  "occam" | "mako")
      PRODUCT_VENDOR=lge
      KERNEL_SRC=${ANDROID_BUILD_TOP}/kernel/msm/mako
      PRODUCT_DEVICE=mako
      KERNEL_ARCH=arm
      MAKE_TARGET=zImage
      KERNEL_OUT_MAP=zImage:kernel
    ;;
  "hammerhead")
      PRODUCT_VENDOR=lge
      KERNEL_SRC=${ANDROID_BUILD_TOP}/kernel/msm/hammerhead
      PRODUCT_DEVICE=hammerhead
      KERNEL_ARCH=arm
      MAKE_TARGET=zImage-dtb
      KERNEL_OUT_MAP=zImage-dtb:zImage-dtb
    ;;
  *)
    echo "not supported product name:" \"${TARGET_PRODUCT}\"
    exit 1
    ;;
esac

case "$KERNEL_ARCH" in
  "arm")
    CROSS_COMPILE="${ANDROID_BUILD_TOP}/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8/bin/arm-eabi-"
    ;;
  *)
    echo "not supported arch:" \"${TARGET_PRODUCT}\"
    exit 1
    ;;
esac

KERNEL_PREBUILT_DIR=${ANDROID_BUILD_TOP}/device/${PRODUCT_VENDOR}/${PRODUCT_DEVICE}-kernel/

KERNEL_DEFCONFIG=${PRODUCT_DEVICE}_defconfig
if [ -n ${USE_CCACHE} ]; then
  CROSS_COMPILE="${ANDROID_BUILD_TOP}/prebuilts/misc/linux-x86/ccache/ccache $CROSS_COMPILE"
fi

kernel_make() {
  make -C ${KERNEL_SRC} O=${KERNEL_OUT} \
      ARCH=${KERNEL_ARCH} \
      CROSS_COMPILE="${CROSS_COMPILE}" -j$(getconf _NPROCESSORS_ONLN)  "$@"
}

kernel_build() {
  rm -rf ${KERNEL_OUT}
  mkdir -p ${KERNEL_OUT}
  mkdir -p ${KERNEL_PREBUILT_DIR}
  kernel_make mrproper "$@" && \
      kernel_make ${KERNEL_DEFCONFIG} "$@" && \
      kernel_make "$MAKE_TARGET" "$@" || exit 1
  KERNEL_BIN=${KERNEL_OUT}/arch/${KERNEL_ARCH}/boot/${KERNEL_OUT_MAP/:*}
  cp -f ${KERNEL_BIN} ${KERNEL_PREBUILT_DIR}/${KERNEL_OUT_MAP/*:} &&
      cp -f ${KERNEL_BIN} ${ANDROID_PRODUCT_OUT}/kernel
}

case "$@" in
  'defconfig')
      mkdir -p ${KERNEL_OUT}/ && \
          kernel_make mrproper && \
          kernel_make ${KERNEL_DEFCONFIG} && \
          kernel_make savedefconfig
    ;;
  'menuconfig')
      mkdir -p ${KERNEL_OUT}/ && \
          kernel_make menuconfig && \
          kernel_make savedefconfig && \
          cp -f ${KERNEL_OUT}/defconfig ${KERNEL_SRC}/arch/${KERNEL_ARCH}/configs/${KERNEL_DEFCONFIG}
    ;;
  *)
    kernel_build "$@"
    ;;
esac
